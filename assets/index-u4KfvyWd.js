(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function l(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=l(e);fetch(e.href,t)}})();const d=100,f=100,m=async()=>{document.fullscreenEnabled||alert("Warning: `document.fullscreenEnabled` was `"+document.fullscreenEnabled+"`, expected `true`.");const r=document.getElementById("video");if(!r)throw new Error("No video element found");typeof r.requestFullscreen!="function"&&alert("Warning: `typeof video.requestFullscreen` was `"+JSON.stringify(typeof r.requestFullscreen)+'`, expected `"function""`.');const o=document.getElementById("button-request-fullscreen");if(!o)throw new Error("No fullscreen button found");o.addEventListener("click",async n=>{n.preventDefault();try{await r.requestFullscreen()}catch(s){alert(`Error requesting full screen:

${s}`)}});const l=document.getElementById("button-webkit-enter-fullscreen");if(!l)throw new Error("No fullscreen button found");l.addEventListener("click",async n=>{n.preventDefault();try{await r.webkitEnterFullscreen()}catch(s){alert(`Error entering full screen (webkit):

${s}`)}});const c=document.getElementById("canvas");if(!c)throw new Error("No canvas element found");const e=c.getContext("2d");if(!e)throw new Error("Unable to get 2D rendering context");const t=document.getElementsByClassName("button-color");if(t.length<1)throw new Error("No color buttons found");for(const n of t)n.addEventListener("click",async s=>{s.preventDefault();const a=s.currentTarget.value;try{e.fillStyle=a,e.fillRect(0,0,d,f);const i=c.captureStream(0),[u]=i.getVideoTracks();u.requestFrame(),r.srcObject=new MediaStream([u])}catch(i){alert(`Error updating test video:

${i}`)}})};(async()=>{try{await m()}catch(r){alert(`Error initializing application:

${r}`)}})();
